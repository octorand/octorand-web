#pragma version 8
intcblock 0 8 1 32
bytecblock 0x3031 0x3032 0x
txn NumAppArgs
intc_0 // 0
==
bnz main_l22
txna ApplicationArgs 0
pushbytes 0x83412591 // "clean()void"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0x27ad968b // "init(address,address,uint64,uint64,uint64,byte[],byte[],byte[],byte[])void"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0x8a2db69d // "play(uint64,uint64)void"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0x40608602 // "finish(uint64)void"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0xb3d15029 // "share(account,account)void"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0x8e4bf495 // "archive()void"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0xb7355fd1 // "withdraw()void"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0x1ff5d9c0 // "update_timer(uint64)void"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0xd30991b5 // "update_name(byte[])void"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0x42a2a814 // "power()void"
==
bnz main_l12
err
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub powercaster_45
intc_2 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updatenamecaster_44
intc_2 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updatetimercaster_43
intc_2 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub withdrawcaster_42
intc_2 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub archivecaster_41
intc_2 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub sharecaster_40
intc_2 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub finishcaster_39
intc_2 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub playcaster_38
intc_2 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub initcaster_37
intc_2 // 1
return
main_l21:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub cleancaster_36
intc_2 // 1
return
main_l22:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l28
txn OnCompletion
intc_2 // OptIn
==
bnz main_l27
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l26
err
main_l26:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_25
intc_2 // 1
return
main_l27:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optin_24
intc_2 // 1
return
main_l28:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_23
intc_2 // 1
return

// execute_payment
executepayment_0:
proto 3 0
itxn_begin
intc_2 // pay
itxn_field TypeEnum
frame_dig -3
itxn_field Receiver
frame_dig -2
itxn_field Amount
frame_dig -1
itxn_field Fee
itxn_submit
retsub

// init_global
initglobal_1:
proto 1 0
frame_dig -1
pushint 120 // 120
bzero
app_global_put
retsub

// init_local
initlocal_2:
proto 2 0
frame_dig -2
frame_dig -1
pushint 120 // 120
bzero
app_local_put
retsub

// get_global_bytes
getglobalbytes_3:
proto 3 1
frame_dig -3
app_global_get
frame_dig -2
frame_dig -1
extract3
retsub

// get_local_bytes
getlocalbytes_4:
proto 4 1
frame_dig -4
frame_dig -3
app_local_get
frame_dig -2
frame_dig -1
extract3
retsub

// get_global_uint
getglobaluint_5:
proto 3 1
frame_dig -3
frame_dig -2
frame_dig -1
callsub getglobalbytes_3
btoi
retsub

// get_local_uint
getlocaluint_6:
proto 4 1
frame_dig -4
frame_dig -3
frame_dig -2
frame_dig -1
callsub getlocalbytes_4
btoi
retsub

// set_global_bytes
setglobalbytes_7:
proto 4 0
frame_dig -4
frame_dig -1
callsub assertisvalidlength_13
frame_dig -3
frame_dig -3
intc_0 // 0
frame_dig -2
callsub getglobalbytes_3
frame_dig -4
concat
frame_dig -3
frame_dig -2
frame_dig -1
+
pushint 120 // 120
frame_dig -2
frame_dig -1
+
-
callsub getglobalbytes_3
concat
app_global_put
retsub

// set_local_bytes
setlocalbytes_8:
proto 5 0
frame_dig -4
frame_dig -1
callsub assertisvalidlength_13
frame_dig -5
frame_dig -3
frame_dig -5
frame_dig -3
intc_0 // 0
frame_dig -2
callsub getlocalbytes_4
frame_dig -4
concat
frame_dig -5
frame_dig -3
frame_dig -2
frame_dig -1
+
pushint 120 // 120
frame_dig -2
frame_dig -1
+
-
callsub getlocalbytes_4
concat
app_local_put
retsub

// set_global_uint
setglobaluint_9:
proto 4 0
frame_dig -4
frame_dig -1
callsub extractuint_11
frame_dig -3
frame_dig -2
frame_dig -1
callsub setglobalbytes_7
retsub

// set_local_uint
setlocaluint_10:
proto 5 0
frame_dig -5
frame_dig -4
frame_dig -1
callsub extractuint_11
frame_dig -3
frame_dig -2
frame_dig -1
callsub setlocalbytes_8
retsub

// extract_uint
extractuint_11:
proto 2 1
frame_dig -2
itob
intc_1 // 8
frame_dig -1
-
frame_dig -1
extract3
retsub

// assert_is_creator
assertiscreator_12:
proto 0 0
txn Sender
global CreatorAddress
==
assert
retsub

// assert_is_valid_length
assertisvalidlength_13:
proto 2 0
frame_dig -2
len
frame_dig -1
==
assert
retsub

// assert_is_future
assertisfuture_14:
proto 1 0
frame_dig -1
global LatestTimestamp
>
assert
retsub

// assert_is_past
assertispast_15:
proto 1 0
frame_dig -1
global LatestTimestamp
<
assert
retsub

// assert_is_direct
assertisdirect_16:
proto 0 0
global CallerApplicationID
intc_0 // 0
==
assert
retsub

// assert_is_master
assertismaster_17:
proto 0 0
txn Sender
bytec_0 // "01"
intc_0 // 0
intc_3 // 32
callsub getglobalbytes_3
==
assert
retsub

// assert_is_admin
assertisadmin_18:
proto 0 0
txn Sender
bytec_0 // "01"
intc_0 // 0
intc_3 // 32
callsub getglobalbytes_3
==
txn Sender
bytec_0 // "01"
intc_3 // 32
intc_3 // 32
callsub getglobalbytes_3
==
||
assert
retsub

// assert_is_timer_running
assertistimerrunning_19:
proto 0 0
bytec_1 // "02"
pushint 96 // 96
intc_1 // 8
callsub getglobaluint_5
callsub assertisfuture_14
retsub

// assert_is_timer_elapsed
assertistimerelapsed_20:
proto 0 0
bytec_1 // "02"
pushint 96 // 96
intc_1 // 8
callsub getglobaluint_5
callsub assertispast_15
retsub

// assert_is_at_status
assertisatstatus_21:
proto 1 0
bytec_1 // "02"
pushint 104 // 104
pushint 2 // 2
callsub getglobaluint_5
frame_dig -1
==
assert
retsub

// assert_is_valid_option
assertisvalidoption_22:
proto 1 0
frame_dig -1
intc_0 // 0
>
assert
frame_dig -1
pushint 3 // 3
<=
assert
retsub

// create
create_23:
proto 0 0
bytec_0 // "01"
callsub initglobal_1
bytec_1 // "02"
callsub initglobal_1
retsub

// opt_in
optin_24:
proto 0 0
txn Sender
bytec_0 // "01"
callsub initlocal_2
retsub

// update
update_25:
proto 0 0
callsub assertiscreator_12
retsub

// clean
clean_26:
proto 0 0
callsub assertismaster_17
bytec_0 // "01"
intc_0 // 0
intc_3 // 32
callsub getglobalbytes_3
global CurrentApplicationAddress
balance
global CurrentApplicationAddress
min_balance
-
intc_0 // 0
callsub executepayment_0
retsub

// init
init_27:
proto 9 0
callsub assertiscreator_12
frame_dig -9
bytec_0 // "01"
intc_0 // 0
intc_3 // 32
callsub setglobalbytes_7
frame_dig -8
bytec_0 // "01"
intc_3 // 32
intc_3 // 32
callsub setglobalbytes_7
frame_dig -7
bytec_1 // "02"
pushint 96 // 96
intc_1 // 8
callsub setglobaluint_9
frame_dig -6
bytec_1 // "02"
pushint 106 // 106
pushint 2 // 2
callsub setglobaluint_9
frame_dig -5
bytec_1 // "02"
pushint 108 // 108
pushint 2 // 2
callsub setglobaluint_9
frame_dig -4
extract 2 0
bytec_0 // "01"
pushint 64 // 64
intc_3 // 32
callsub setglobalbytes_7
frame_dig -3
extract 2 0
bytec_1 // "02"
intc_0 // 0
pushint 24 // 24
callsub setglobalbytes_7
frame_dig -2
extract 2 0
bytec_1 // "02"
pushint 24 // 24
pushint 24 // 24
callsub setglobalbytes_7
frame_dig -1
extract 2 0
bytec_1 // "02"
pushint 48 // 48
pushint 24 // 24
callsub setglobalbytes_7
retsub

// play
play_28:
proto 2 0
callsub assertistimerrunning_19
frame_dig -2
callsub assertisvalidoption_22
callsub assertisdirect_16
frame_dig -1
intc_0 // 0
>
assert
txn GroupIndex
intc_2 // 1
+
gtxns Sender
txn Sender
==
assert
txn GroupIndex
intc_2 // 1
+
gtxns TypeEnum
intc_2 // pay
==
assert
txn GroupIndex
intc_2 // 1
+
gtxns Receiver
global CurrentApplicationAddress
==
assert
txn GroupIndex
intc_2 // 1
+
gtxns Amount
frame_dig -1
==
assert
txn Sender
bytec_0 // "01"
intc_3 // 32
intc_3 // 32
callsub getglobalbytes_3
==
bnz play_28_l8
bytec_0 // "01"
pushint 96 // 96
intc_1 // 8
callsub getglobaluint_5
frame_dig -1
pushint 4 // 4
*
pushint 100 // 100
/
+
bytec_0 // "01"
pushint 96 // 96
intc_1 // 8
callsub setglobaluint_9
play_28_l2:
bytec_0 // "01"
pushint 104 // 104
intc_1 // 8
callsub getglobaluint_5
frame_dig -1
bytec_1 // "02"
pushint 106 // 106
pushint 2 // 2
callsub getglobaluint_5
*
pushint 100 // 100
/
+
bytec_0 // "01"
pushint 104 // 104
intc_1 // 8
callsub setglobaluint_9
bytec_0 // "01"
pushint 112 // 112
intc_1 // 8
callsub getglobaluint_5
frame_dig -1
+
bytec_0 // "01"
pushint 112 // 112
intc_1 // 8
callsub setglobaluint_9
txn Sender
txn Sender
bytec_0 // "01"
pushint 24 // 24
intc_1 // 8
callsub getlocaluint_6
frame_dig -1
+
bytec_0 // "01"
pushint 24 // 24
intc_1 // 8
callsub setlocaluint_10
frame_dig -2
intc_2 // 1
==
bnz play_28_l7
frame_dig -2
pushint 2 // 2
==
bnz play_28_l6
frame_dig -2
pushint 3 // 3
==
bz play_28_l9
bytec_1 // "02"
pushint 88 // 88
intc_1 // 8
callsub getglobaluint_5
frame_dig -1
+
bytec_1 // "02"
pushint 88 // 88
intc_1 // 8
callsub setglobaluint_9
txn Sender
txn Sender
bytec_0 // "01"
pushint 16 // 16
intc_1 // 8
callsub getlocaluint_6
frame_dig -1
+
bytec_0 // "01"
pushint 16 // 16
intc_1 // 8
callsub setlocaluint_10
b play_28_l9
play_28_l6:
bytec_1 // "02"
pushint 80 // 80
intc_1 // 8
callsub getglobaluint_5
frame_dig -1
+
bytec_1 // "02"
pushint 80 // 80
intc_1 // 8
callsub setglobaluint_9
txn Sender
txn Sender
bytec_0 // "01"
intc_1 // 8
intc_1 // 8
callsub getlocaluint_6
frame_dig -1
+
bytec_0 // "01"
intc_1 // 8
intc_1 // 8
callsub setlocaluint_10
b play_28_l9
play_28_l7:
bytec_1 // "02"
pushint 72 // 72
intc_1 // 8
callsub getglobaluint_5
frame_dig -1
+
bytec_1 // "02"
pushint 72 // 72
intc_1 // 8
callsub setglobaluint_9
txn Sender
txn Sender
bytec_0 // "01"
intc_0 // 0
intc_1 // 8
callsub getlocaluint_6
frame_dig -1
+
bytec_0 // "01"
intc_0 // 0
intc_1 // 8
callsub setlocaluint_10
b play_28_l9
play_28_l8:
bytec_0 // "01"
pushint 104 // 104
intc_1 // 8
callsub getglobaluint_5
frame_dig -1
pushint 4 // 4
*
pushint 100 // 100
/
+
bytec_0 // "01"
pushint 104 // 104
intc_1 // 8
callsub setglobaluint_9
b play_28_l2
play_28_l9:
retsub

// finish
finish_29:
proto 1 0
callsub assertisadmin_18
callsub assertistimerelapsed_20
intc_0 // 0
callsub assertisatstatus_21
frame_dig -1
callsub assertisvalidoption_22
frame_dig -1
bytec_1 // "02"
pushint 110 // 110
pushint 2 // 2
callsub setglobaluint_9
intc_2 // 1
bytec_1 // "02"
pushint 104 // 104
pushint 2 // 2
callsub setglobaluint_9
retsub

// share
share_30:
proto 2 0
callsub assertisadmin_18
callsub assertistimerelapsed_20
intc_2 // 1
callsub assertisatstatus_21
frame_dig -2
txnas Accounts
bytec_0 // "01"
intc_0 // 0
intc_3 // 32
callsub getglobalbytes_3
==
assert
frame_dig -1
txnas Accounts
bytec_0 // "01"
intc_3 // 32
intc_3 // 32
callsub getglobalbytes_3
==
assert
bytec_0 // "01"
intc_0 // 0
intc_3 // 32
callsub getglobalbytes_3
bytec_0 // "01"
pushint 96 // 96
intc_1 // 8
callsub getglobaluint_5
intc_0 // 0
callsub executepayment_0
bytec_0 // "01"
intc_3 // 32
intc_3 // 32
callsub getglobalbytes_3
bytec_0 // "01"
pushint 104 // 104
intc_1 // 8
callsub getglobaluint_5
intc_0 // 0
callsub executepayment_0
pushint 2 // 2
bytec_1 // "02"
pushint 104 // 104
pushint 2 // 2
callsub setglobaluint_9
retsub

// archive
archive_31:
proto 0 0
callsub assertismaster_17
pushint 2 // 2
callsub assertisatstatus_21
pushint 3 // 3
bytec_1 // "02"
pushint 104 // 104
pushint 2 // 2
callsub setglobaluint_9
retsub

// withdraw
withdraw_32:
proto 0 0
callsub assertistimerelapsed_20
pushint 2 // 2
callsub assertisatstatus_21
txn Sender
bytec_0 // "01"
intc_3 // 32
intc_1 // 8
callsub getlocaluint_6
intc_0 // 0
==
assert
txn Sender
intc_2 // 1
bytec_0 // "01"
intc_3 // 32
intc_1 // 8
callsub setlocaluint_10
bytec_1 // "02"
pushint 110 // 110
pushint 2 // 2
callsub getglobaluint_5
intc_2 // 1
==
bnz withdraw_32_l5
bytec_1 // "02"
pushint 110 // 110
pushint 2 // 2
callsub getglobaluint_5
pushint 2 // 2
==
bnz withdraw_32_l4
bytec_1 // "02"
pushint 110 // 110
pushint 2 // 2
callsub getglobaluint_5
pushint 3 // 3
==
bz withdraw_32_l6
txn Sender
bytec_0 // "01"
pushint 112 // 112
intc_1 // 8
callsub getglobaluint_5
bytec_1 // "02"
pushint 108 // 108
pushint 2 // 2
callsub getglobaluint_5
*
pushint 100 // 100
/
txn Sender
bytec_0 // "01"
pushint 16 // 16
intc_1 // 8
callsub getlocaluint_6
*
bytec_1 // "02"
pushint 88 // 88
intc_1 // 8
callsub getglobaluint_5
/
intc_0 // 0
callsub executepayment_0
b withdraw_32_l6
withdraw_32_l4:
txn Sender
bytec_0 // "01"
pushint 112 // 112
intc_1 // 8
callsub getglobaluint_5
bytec_1 // "02"
pushint 108 // 108
pushint 2 // 2
callsub getglobaluint_5
*
pushint 100 // 100
/
txn Sender
bytec_0 // "01"
intc_1 // 8
intc_1 // 8
callsub getlocaluint_6
*
bytec_1 // "02"
pushint 80 // 80
intc_1 // 8
callsub getglobaluint_5
/
intc_0 // 0
callsub executepayment_0
b withdraw_32_l6
withdraw_32_l5:
txn Sender
bytec_0 // "01"
pushint 112 // 112
intc_1 // 8
callsub getglobaluint_5
bytec_1 // "02"
pushint 108 // 108
pushint 2 // 2
callsub getglobaluint_5
*
pushint 100 // 100
/
txn Sender
bytec_0 // "01"
intc_0 // 0
intc_1 // 8
callsub getlocaluint_6
*
bytec_1 // "02"
pushint 72 // 72
intc_1 // 8
callsub getglobaluint_5
/
intc_0 // 0
callsub executepayment_0
withdraw_32_l6:
retsub

// update_timer
updatetimer_33:
proto 1 0
callsub assertisadmin_18
callsub assertistimerrunning_19
frame_dig -1
callsub assertisfuture_14
frame_dig -1
bytec_1 // "02"
pushint 96 // 96
intc_1 // 8
callsub setglobaluint_9
retsub

// update_name
updatename_34:
proto 1 0
callsub assertisadmin_18
callsub assertistimerrunning_19
frame_dig -1
extract 2 0
intc_3 // 32
callsub assertisvalidlength_13
frame_dig -1
extract 2 0
bytec_0 // "01"
pushint 64 // 64
intc_3 // 32
callsub setglobalbytes_7
retsub

// power
power_35:
proto 0 0
intc_2 // 1
return

// clean_caster
cleancaster_36:
proto 0 0
callsub clean_26
retsub

// init_caster
initcaster_37:
proto 0 0
bytec_2 // ""
dup
intc_0 // 0
dupn 2
bytec_2 // ""
dupn 3
txna ApplicationArgs 1
frame_bury 0
txna ApplicationArgs 2
frame_bury 1
txna ApplicationArgs 3
btoi
frame_bury 2
txna ApplicationArgs 4
btoi
frame_bury 3
txna ApplicationArgs 5
btoi
frame_bury 4
txna ApplicationArgs 6
frame_bury 5
txna ApplicationArgs 7
frame_bury 6
txna ApplicationArgs 8
frame_bury 7
txna ApplicationArgs 9
frame_bury 8
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
callsub init_27
retsub

// play_caster
playcaster_38:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
frame_dig 0
frame_dig 1
callsub play_28
retsub

// finish_caster
finishcaster_39:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub finish_29
retsub

// share_caster
sharecaster_40:
proto 0 0
intc_0 // 0
dup
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 1
frame_dig 0
frame_dig 1
callsub share_30
retsub

// archive_caster
archivecaster_41:
proto 0 0
callsub archive_31
retsub

// withdraw_caster
withdrawcaster_42:
proto 0 0
callsub withdraw_32
retsub

// update_timer_caster
updatetimercaster_43:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
btoi
frame_bury 0
frame_dig 0
callsub updatetimer_33
retsub

// update_name_caster
updatenamecaster_44:
proto 0 0
bytec_2 // ""
txna ApplicationArgs 1
frame_bury 0
frame_dig 0
callsub updatename_34
retsub

// power_caster
powercaster_45:
proto 0 0
callsub power_35
retsub